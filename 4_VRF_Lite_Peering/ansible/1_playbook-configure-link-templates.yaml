---
- name: IaC Workshop - VRF Lite Peering Link Templates
  hosts: ndfc
  gather_facts: false
  connection: httpapi
  collections:
    - cisco.dcnm
  vars_prompt:
    - name: pod_num
      prompt: Please enter Pod number (0-9)?
      private: no
  vars:
    dc1_wan_links: []
    dc2_wan_links: []
  tasks:
    - name: QUERY Fabric Links
      dcnm_rest:
        method: GET
        path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/links/fabrics/AUTO-POD{{pod_num}}-MSD"
      register: links
    - name: Filter Result for those with fabricName parameter
      vars:
        data: []
      set_fact:
        data: "{{ data + [item] }}"
      when: item.fabricName is defined
      loop: "{{ links.response.DATA }}"
    # - name: Display Result
    #   ansible.builtin.debug:
    #     msg: "{{ data }}"
    - name: Set conditional
      set_fact:
        test: "AUTO-POD{{pod_num}}-DC1<->AUTO-POD{{pod_num}}-WAN"
    - name: Filter Result for DC1 Links
      set_fact:
        dc1_wan_links: "{{ dc1_wan_links + [item] }}"
      loop: "{{ data }}"
      when: test == item.fabricName
    - name: Set conditional
      set_fact:
        test: "AUTO-POD{{pod_num}}-DC2<->AUTO-POD{{pod_num}}-WAN"
    - name: Filter Result for DC2 Links
      set_fact:
        dc2_wan_links: "{{ dc2_wan_links + [item] }}"
      loop: "{{ data }}"
      when: test == item.fabricName
    # - name: Display Result DC1
    #   ansible.builtin.debug:
    #     msg: "{{ dc1_wan_links }}"
    # - name: Display Result DC2
    #   ansible.builtin.debug:
    #     msg: "{{ dc2_wan_links }}"
    - name: Merge Link Dictionaries
      set_fact:
        wan_links: "{{ dc1_wan_links + dc2_wan_links }}"
    - name: Display Result
      ansible.builtin.debug:
        msg: "{{ wan_links }}"
    - name: Modify Link Template for VRF Lite Peering
      include_tasks: modify-link-template-tasks.yaml
      loop: "{{wan_links | sort(attribute='sw1-info.sw-sys-name') }}"
      loop_control:
        index_var: idx
